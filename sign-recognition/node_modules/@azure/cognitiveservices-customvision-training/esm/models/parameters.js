/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
export var apiKey = {
    parameterPath: "apiKey",
    mapper: {
        required: true,
        serializedName: "Training-Key",
        type: {
            name: "String"
        }
    }
};
export var classificationType = {
    parameterPath: [
        "options",
        "classificationType"
    ],
    mapper: {
        serializedName: "classificationType",
        type: {
            name: "String"
        }
    }
};
export var description = {
    parameterPath: [
        "options",
        "description"
    ],
    mapper: {
        serializedName: "description",
        type: {
            name: "String"
        }
    }
};
export var domainId0 = {
    parameterPath: "domainId",
    mapper: {
        required: true,
        serializedName: "domainId",
        type: {
            name: "Uuid"
        }
    }
};
export var domainId1 = {
    parameterPath: [
        "options",
        "domainId"
    ],
    mapper: {
        serializedName: "domainId",
        type: {
            name: "Uuid"
        }
    }
};
export var endpoint = {
    parameterPath: "endpoint",
    mapper: {
        required: true,
        serializedName: "Endpoint",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var flavor = {
    parameterPath: [
        "options",
        "flavor"
    ],
    mapper: {
        serializedName: "flavor",
        type: {
            name: "String"
        }
    }
};
export var forceTrain = {
    parameterPath: [
        "options",
        "forceTrain"
    ],
    mapper: {
        serializedName: "forceTrain",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var ids = {
    parameterPath: "ids",
    mapper: {
        required: true,
        serializedName: "ids",
        constraints: {
            MaxItems: 64,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var imageData = {
    parameterPath: "imageData",
    mapper: {
        required: true,
        serializedName: "imageData",
        type: {
            name: "Stream"
        }
    }
};
export var imageId = {
    parameterPath: "imageId",
    mapper: {
        required: true,
        serializedName: "imageId",
        type: {
            name: "Uuid"
        }
    }
};
export var imageIds0 = {
    parameterPath: "imageIds",
    mapper: {
        required: true,
        serializedName: "imageIds",
        constraints: {
            MaxItems: 64,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var imageIds1 = {
    parameterPath: [
        "options",
        "imageIds"
    ],
    mapper: {
        serializedName: "imageIds",
        constraints: {
            MaxItems: 256,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var imageIds2 = {
    parameterPath: "imageIds",
    mapper: {
        required: true,
        serializedName: "imageIds",
        constraints: {
            MaxItems: 256,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var iterationId0 = {
    parameterPath: [
        "options",
        "iterationId"
    ],
    mapper: {
        serializedName: "iterationId",
        type: {
            name: "Uuid"
        }
    }
};
export var iterationId1 = {
    parameterPath: "iterationId",
    mapper: {
        required: true,
        serializedName: "iterationId",
        type: {
            name: "Uuid"
        }
    }
};
export var name = {
    parameterPath: "name",
    mapper: {
        required: true,
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
export var notificationEmailAddress = {
    parameterPath: [
        "options",
        "notificationEmailAddress"
    ],
    mapper: {
        serializedName: "notificationEmailAddress",
        type: {
            name: "String"
        }
    }
};
export var orderBy = {
    parameterPath: [
        "options",
        "orderBy"
    ],
    mapper: {
        serializedName: "orderBy",
        type: {
            name: "String"
        }
    }
};
export var overlapThreshold = {
    parameterPath: [
        "options",
        "overlapThreshold"
    ],
    mapper: {
        serializedName: "overlapThreshold",
        type: {
            name: "Number"
        }
    }
};
export var platform = {
    parameterPath: "platform",
    mapper: {
        required: true,
        serializedName: "platform",
        type: {
            name: "String"
        }
    }
};
export var predictionId = {
    parameterPath: "predictionId",
    mapper: {
        required: true,
        serializedName: "predictionId",
        type: {
            name: "String"
        }
    }
};
export var projectId = {
    parameterPath: "projectId",
    mapper: {
        required: true,
        serializedName: "projectId",
        type: {
            name: "Uuid"
        }
    }
};
export var publishName = {
    parameterPath: "publishName",
    mapper: {
        required: true,
        serializedName: "publishName",
        type: {
            name: "String"
        }
    }
};
export var regionIds = {
    parameterPath: "regionIds",
    mapper: {
        required: true,
        serializedName: "regionIds",
        constraints: {
            MaxItems: 64,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var reservedBudgetInHours = {
    parameterPath: [
        "options",
        "reservedBudgetInHours"
    ],
    mapper: {
        serializedName: "reservedBudgetInHours",
        defaultValue: 0,
        type: {
            name: "Number"
        }
    }
};
export var skip = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "skip",
        defaultValue: 0,
        type: {
            name: "Number"
        }
    }
};
export var tagId = {
    parameterPath: "tagId",
    mapper: {
        required: true,
        serializedName: "tagId",
        type: {
            name: "Uuid"
        }
    }
};
export var tagIds0 = {
    parameterPath: [
        "options",
        "tagIds"
    ],
    mapper: {
        serializedName: "tagIds",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var tagIds1 = {
    parameterPath: "tagIds",
    mapper: {
        required: true,
        serializedName: "tagIds",
        constraints: {
            MaxItems: 20,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var tagIds2 = {
    parameterPath: [
        "options",
        "tagIds"
    ],
    mapper: {
        serializedName: "tagIds",
        constraints: {
            MaxItems: 20,
            MinItems: 0
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var take = {
    parameterPath: [
        "options",
        "take"
    ],
    mapper: {
        serializedName: "take",
        defaultValue: 50,
        constraints: {
            InclusiveMaximum: 256,
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
export var targetExportPlatforms = {
    parameterPath: [
        "options",
        "targetExportPlatforms"
    ],
    mapper: {
        serializedName: "targetExportPlatforms",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var threshold = {
    parameterPath: [
        "options",
        "threshold"
    ],
    mapper: {
        serializedName: "threshold",
        type: {
            name: "Number"
        }
    }
};
export var trainingType = {
    parameterPath: [
        "options",
        "trainingType"
    ],
    mapper: {
        serializedName: "trainingType",
        type: {
            name: "String"
        }
    }
};
export var type = {
    parameterPath: [
        "options",
        "type"
    ],
    mapper: {
        serializedName: "type",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map